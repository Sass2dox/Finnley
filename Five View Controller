
import UIKit

class FiveViewController: UIViewController {
    
    // MARK: - –í–µ—Ä—Ö–Ω—è—è –ª—è–≥—É—à–∫–∞
    private let topFrogImage: UIImageView = {
        let imageView = UIImageView(image: UIImage(named: "frogfive"))
        imageView.contentMode = .scaleAspectFit
        return imageView
    }()
    
    // –¢–µ–∫—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
    private let topLabel: UILabel = {
        let label = UILabel()
        label.text = """
–ü—Ä–∏–≤–µ—Ç! –ö–æ–≥–¥–∞ –º—ã —Ç—Ä–∞—Ç–∏–º –¥–µ–Ω—å–≥–∏, —ç—Ç–æ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ä–∞—Å—Ö–æ–¥–∞–º–∏. –ê –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –¥–æ—Å—Ç–∞–ª–æ—Å—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ ‚Äî —ç—Ç–æ –Ω–µ —Ä–∞—Å—Ö–æ–¥! –î–∞–≤–∞–π —Ä–∞–∑–±–µ—Ä—ë–º—Å—è, –∫–∞–∫–∏–µ –≤–µ—â–∏ —Å—á–∏—Ç–∞—é—Ç—Å—è —Ä–∞—Å—Ö–æ–¥–∞–º–∏, –∞ –∫–∞–∫–∏–µ ‚Äî –Ω–µ—Ç!
"""
        label.font = UIFont.systemFont(ofSize: 16, weight: .regular)
        label.numberOfLines = 0
        return label
    }()
    
    // –ü–µ—Ä–≤–∞—è –ª–∏–Ω–∏—è-—Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
    private let separator1: UIView = {
        let view = UIView()
        // –ó–µ–ª—ë–Ω–∞—è –ª–∏–Ω–∏—è
        view.backgroundColor = UIColor(red: 105/255, green: 176/255, blue: 102/255, alpha: 1)
        return view
    }()
    
    // –ó–∞–≥–æ–ª–æ–≤–æ–∫ ¬´–†–∞—Å—Ö–æ–¥¬ª
    private let expenseTitle: UILabel = {
        let label = UILabel()
        label.text = "–†–∞—Å—Ö–æ–¥ ‚Äî —ç—Ç–æ —Ç–æ, –Ω–∞ —á—Ç–æ —Ç—ã —Ç—Ä–∞—Ç–∏—à—å —Å–≤–æ–∏ –¥–µ–Ω—å–≥–∏."
        label.font = UIFont.boldSystemFont(ofSize: 17)
        label.numberOfLines = 0
        label.textAlignment = .center
        return label
    }()
    
    // –õ—è–≥—É—à–∫–∞ –¥–ª—è –±–ª–æ–∫–∞ ¬´–†–∞—Å—Ö–æ–¥¬ª
    private let expenseFrog: UIImageView = {
        let imageView = UIImageView(image: UIImage(named: "frogfive"))
        imageView.contentMode = .scaleAspectFit
        return imageView
    }()
    
    // –û–ø–∏—Å–∞–Ω–∏–µ ¬´–†–∞—Å—Ö–æ–¥¬ª (—Å–ø–∏—Å–æ–∫)
    private let expenseLabel: UILabel = {
        let label = UILabel()
        label.text = """
üè† –ê—Ä–µ–Ω–¥–∞ ‚Äì —Ç—ã –ø–ª–∞—Ç–∏—à—å –∑–∞ –∂–∏–ª—å—ë.
üçî –ï–¥–∞ ‚Äì –ø–æ–∫—É–ø–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏–ª–∏ –ø–æ—Ö–æ–¥ –≤ –∫–∞—Ñ–µ.
üì± –û–ø–ª–∞—Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ ‚Äì —Å–≤—è–∑—å –∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å—Ç–æ—è—Ç –¥–µ–Ω–µ–≥.
üëï –û–¥–µ–∂–¥–∞ ‚Äì –µ—Å–ª–∏ —Ç—ã –∫—É–ø–∏–ª –Ω–æ–≤—É—é —Ñ—É—Ç–±–æ–ª–∫—É, —ç—Ç–æ —Ä–∞—Å—Ö–æ–¥.
"""
        label.font = UIFont.systemFont(ofSize: 16, weight: .regular)
        label.numberOfLines = 0
        return label
    }()
    
    // –í—Ç–æ—Ä–∞—è –ª–∏–Ω–∏—è-—Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
    private let separator2: UIView = {
        let view = UIView()
        view.backgroundColor = UIColor(red: 105/255, green: 176/255, blue: 102/255, alpha: 1)
        return view
    }()
    
    // –ó–∞–≥–æ–ª–æ–≤–æ–∫ ¬´–ù–µ —Ä–∞—Å—Ö–æ–¥¬ª
    private let freeTitle: UILabel = {
        let label = UILabel()
        label.text = "–ù–µ —Ä–∞—Å—Ö–æ–¥ ‚Äî —ç—Ç–æ —Ç–æ, —á—Ç–æ —Ç—ã –ø–æ–ª—É—á–∏–ª –±–µ—Å–ø–ª–∞—Ç–Ω–æ."
        label.font = UIFont.boldSystemFont(ofSize: 17)
        label.numberOfLines = 0
        label.textAlignment = .center
        return label
    }()
    
    // –õ—è–≥—É—à–∫–∞ –¥–ª—è –±–ª–æ–∫–∞ ¬´–ù–µ —Ä–∞—Å—Ö–æ–¥¬ª
    private let freeFrog: UIImageView = {
        let imageView = UIImageView(image: UIImage(named: "frogfive"))
        imageView.contentMode = .scaleAspectFit
        return imageView
    }()
    
    // –û–ø–∏—Å–∞–Ω–∏–µ ¬´–ù–µ —Ä–∞—Å—Ö–æ–¥¬ª (—Å–ø–∏—Å–æ–∫)
    private let freeLabel: UILabel = {
        let label = UILabel()
        label.text = """
üéÅ –ü–æ–¥–∞—Ä–∫–∏ ‚Äì –µ—Å–ª–∏ —Ç–µ–±–µ —á—Ç–æ-—Ç–æ –ø–æ–¥–∞—Ä–∏–ª–∏, —Ç—ã –Ω–µ —Ç—Ä–∞—Ç–∏–ª –¥–µ–Ω—å–≥–∏.
üí∞ –ù–∞–π–¥–µ–Ω–Ω—ã–µ –¥–µ–Ω—å–≥–∏ ‚Äì –æ–Ω–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ—è–≤–∏–ª–∏—Å—å —É —Ç–µ–±—è, –Ω–æ —Ç—ã –∏—Ö –Ω–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–ª –∏ –Ω–µ —Ç—Ä–∞—Ç–∏–ª.
"""
        label.font = UIFont.systemFont(ofSize: 16, weight: .regular)
        label.numberOfLines = 0
        return label
    }()
    
    // –ö–Ω–æ–ø–∫–∞ ¬´–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å¬ª
    private let continueButton: UIButton = {
        let button = UIButton(type: .custom)
        let image = UIImage(named: "Continue")
        button.setImage(image, for: .normal)
        button.imageView?.contentMode = .scaleAspectFit
        return button
    }()
    
    // MARK: - –ñ–∏–∑–Ω–µ–Ω–Ω—ã–π —Ü–∏–∫–ª
    override func viewDidLoad() {
        super.viewDidLoad()
        setupUI()
        setupConstraints()
    }
    
    // MARK: - UI
    private func setupUI() {
        // –§–æ–Ω —ç–∫—Ä–∞–Ω–∞
        view.backgroundColor = UIColor(red: 232/255, green: 252/255, blue: 244/255, alpha: 1)
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å–∞–±–≤—å—é
        view.addSubview(topFrogImage)
        view.addSubview(topLabel)
        
        view.addSubview(separator1)
        view.addSubview(expenseTitle)
        view.addSubview(expenseFrog)
        view.addSubview(expenseLabel)
        
        view.addSubview(separator2)
        view.addSubview(freeTitle)
        view.addSubview(freeFrog)
        view.addSubview(freeLabel)
        
        view.addSubview(continueButton)
        
        // –ù–∞–∑–Ω–∞—á–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –∫–Ω–æ–ø–∫–∏
        continueButton.addTarget(self, action: #selector(continueButtonTapped), for: .touchUpInside)
    }
    
    // MARK: - Constraints
    private func setupConstraints() {
        [
            topFrogImage,
            topLabel,
            separator1,
            expenseTitle,
            expenseFrog,
            expenseLabel,
            separator2,
            freeTitle,
            freeFrog,
            freeLabel,
            continueButton
        ].forEach { $0.translatesAutoresizingMaskIntoConstraints = false }
        
        NSLayoutConstraint.activate([
            // –õ—è–≥—É—à–∫–∞ (–≤–µ—Ä—Ö)
            topFrogImage.topAnchor.constraint(equalTo: view.safeAreaLayoutGuide.topAnchor, constant: 20),
            topFrogImage.leadingAnchor.constraint(equalTo: view.leadingAnchor, constant: 20),
            topFrogImage.widthAnchor.constraint(equalToConstant: 80),
            topFrogImage.heightAnchor.constraint(equalToConstant: 140),
            
            // –¢–µ–∫—Å—Ç —Å–ø—Ä–∞–≤–∞ –æ—Ç –≤–µ—Ä—Ö–Ω–µ–π –ª—è–≥—É—à–∫–∏
            topLabel.topAnchor.constraint(equalTo: view.safeAreaLayoutGuide.topAnchor, constant: 20),
            topLabel.leadingAnchor.constraint(equalTo: topFrogImage.trailingAnchor, constant: 10),
            topLabel.trailingAnchor.constraint(equalTo: view.trailingAnchor, constant: -20),
            
            // –õ–∏–Ω–∏—è 1 (—Ä–∞—Å–ø–æ–ª–∞–≥–∞–µ–º –Ω–∏–∂–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∏–∑ topFrogImage / topLabel)
            separator1.topAnchor.constraint(equalTo: topLabel.bottomAnchor, constant: 20),
            separator1.leadingAnchor.constraint(equalTo: view.leadingAnchor, constant: 20),
            separator1.trailingAnchor.constraint(equalTo: view.trailingAnchor, constant: -20),
            separator1.heightAnchor.constraint(equalToConstant: 2),
            
            // –ó–∞–≥–æ–ª–æ–≤–æ–∫ ¬´–†–∞—Å—Ö–æ–¥¬ª
            expenseTitle.topAnchor.constraint(equalTo: separator1.bottomAnchor, constant: 20),
            expenseTitle.leadingAnchor.constraint(equalTo: view.leadingAnchor, constant: 20),
            expenseTitle.trailingAnchor.constraint(equalTo: view.trailingAnchor, constant: -20),
            
            // –õ—è–≥—É—à–∫–∞ –¥–ª—è ¬´–†–∞—Å—Ö–æ–¥¬ª
            expenseFrog.topAnchor.constraint(equalTo: expenseTitle.bottomAnchor, constant: 20),
            expenseFrog.leadingAnchor.constraint(equalTo: view.leadingAnchor, constant: 20),
            expenseFrog.widthAnchor.constraint(equalToConstant: 80),
            expenseFrog.heightAnchor.constraint(equalToConstant: 140),
            
            // –¢–µ–∫—Å—Ç ¬´–†–∞—Å—Ö–æ–¥¬ª (—Å–ø–∏—Å–æ–∫)
            expenseLabel.topAnchor.constraint(equalTo: expenseTitle.bottomAnchor, constant: 20),
            expenseLabel.leadingAnchor.constraint(equalTo: expenseFrog.trailingAnchor, constant: 10),
            expenseLabel.trailingAnchor.constraint(equalTo: view.trailingAnchor, constant: -20),
            
            // –õ–∏–Ω–∏—è 2
            separator2.topAnchor.constraint(equalTo: expenseLabel.bottomAnchor, constant: 20),
            separator2.leadingAnchor.constraint(equalTo: view.leadingAnchor, constant: 20),
            separator2.trailingAnchor.constraint(equalTo: view.trailingAnchor, constant: -20),
            separator2.heightAnchor.constraint(equalToConstant: 2),
            
            // –ó–∞–≥–æ–ª–æ–≤–æ–∫ ¬´–ù–µ —Ä–∞—Å—Ö–æ–¥¬ª
            freeTitle.topAnchor.constraint(equalTo: separator2.bottomAnchor, constant: 20),
            freeTitle.leadingAnchor.constraint(equalTo: view.leadingAnchor, constant: 20),
            freeTitle.trailingAnchor.constraint(equalTo: view.trailingAnchor, constant: -20),
            
            // –õ—è–≥—É—à–∫–∞ –¥–ª—è ¬´–ù–µ —Ä–∞—Å—Ö–æ–¥¬ª
            freeFrog.topAnchor.constraint(equalTo: freeTitle.bottomAnchor, constant: 20),
            freeFrog.leadingAnchor.constraint(equalTo: view.leadingAnchor, constant: 20),
            freeFrog.widthAnchor.constraint(equalToConstant: 80),
            freeFrog.heightAnchor.constraint(equalToConstant: 140),
            
            // –¢–µ–∫—Å—Ç ¬´–ù–µ —Ä–∞—Å—Ö–æ–¥¬ª (—Å–ø–∏—Å–æ–∫)
            freeLabel.topAnchor.constraint(equalTo: freeTitle.bottomAnchor, constant: 20),
            freeLabel.leadingAnchor.constraint(equalTo: freeFrog.trailingAnchor, constant: 10),
            freeLabel.trailingAnchor.constraint(equalTo: view.trailingAnchor, constant: -20),
            
            // –ö–Ω–æ–ø–∫–∞ ¬´–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å¬ª
            continueButton.bottomAnchor.constraint(equalTo: view.safeAreaLayoutGuide.bottomAnchor, constant: -30),
            continueButton.centerXAnchor.constraint(equalTo: view.centerXAnchor),
            continueButton.widthAnchor.constraint(equalToConstant: 260),
            continueButton.heightAnchor.constraint(equalToConstant: 58)
        ])
    }
    
    // MARK: - –î–µ–π—Å—Ç–≤–∏–µ –∫–Ω–æ–ø–∫–∏
    @objc private func continueButtonTapped() {
        let sixVC = SixViewController()
        sixVC.modalPresentationStyle = .fullScreen
        present(sixVC, animated: true, completion: nil)
    }
}
